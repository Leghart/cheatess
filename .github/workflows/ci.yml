on: [pull_request]

name: CI

jobs:
  prepare:
    name: Prepare environment and build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libwayland-dev pkg-config

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Build project
        run: cargo build --release
        working-directory: core

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: core-build
          path: core/target/release

  check:
    name: Check
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: core-build
          path: core/target/release

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Run cargo check
        run: cargo check
        working-directory: core

  test:
    name: Run test suite
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: core-build
          path: core/target/release

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run cargo test
        run: cargo test
        working-directory: core

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: core-build
          path: core/target/release

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Install rustfmt
        run: rustup component add rustfmt

      - name: Run cargo fmt
        run: cargo fmt --all -- --check
        working-directory: core

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: core-build
          path: core/target/release

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Install clippy
        run: rustup component add clippy

      - name: Run cargo clippy
        run: cargo clippy -- -D warnings
        working-directory: core
