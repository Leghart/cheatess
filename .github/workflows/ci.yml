on: [pull_request]

name: CI

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/cheatess-test:latest

jobs:
  prepare_image:
    name: Build Test Image
    runs-on: ubuntu-latest
    if: |
      contains(join(github.event.pull_request.files.*.filename, ','), 'Cargo.toml') ||
      contains(join(github.event.pull_request.files.*.filename, ','), 'Cargo.lock')
    outputs:
      built: true
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile.test
          push: true
          tags: ${{ env.IMAGE_NAME }}

  check:
    name: Check
    runs-on: ubuntu-latest
    container:
      image: ${{ env.IMAGE_NAME }}
    needs: [prepare_image]
    steps:
      - uses: actions/checkout@v2
      - run: cargo check

  test:
    name: Tests
    runs-on: ubuntu-latest
    container:
      image: ${{ env.IMAGE_NAME }}
    needs: [prepare_image]
    steps:
      - uses: actions/checkout@v2
      - run: cargo test


  fmt:
    name: Format
    runs-on: ubuntu-latest
    container:
      image: ${{ env.IMAGE_NAME }}
    needs: [prepare_image]
    steps:
      - uses: actions/checkout@v2
      - run: cargo fmt --all -- --check

  clippy:
    name: Lint
    runs-on: ubuntu-latest
    container:
      image: ${{ env.IMAGE_NAME }}
    needs: [prepare_image]
    steps:
      - uses: actions/checkout@v2
      - run: cargo clippy -- -D warnings